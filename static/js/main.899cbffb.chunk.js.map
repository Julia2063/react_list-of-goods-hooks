{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","copyGoods","useState","NONE","sortType","setSortType","isReversed","setIsReversed","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,IAAIC,EAAS,UAAOF,GACpB,EAAgCG,mBAASJ,EAASK,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAcAN,EAAUO,MAAK,SAACC,EAAIC,GAClB,OAAQN,GACN,KAAKN,EAASa,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKZ,EAASe,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFL,EAAUc,UASZ,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYd,IAAaN,EAASa,WAGxCQ,QA9CmB,WACzBd,EAAYP,EAASa,WAqCjB,iCAaA,wBACEM,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYd,IAAaN,EAASe,SAGxCM,QAvDa,WACnBd,EAAYP,EAASe,SA8CjB,4BAaA,wBACEI,KAAK,SACLD,UACEE,IAAW,oBAAqB,CAAE,YAAaZ,IAEjDa,QA7DY,WAClBZ,GAAeD,IAuDX,uBAUGF,IAAaN,EAASK,OAASG,IAE5B,wBACEW,KAAK,SACLD,UAAU,4BACVG,QAlDA,WACZd,EAAYP,EAASK,MACrBI,GAAc,GACdN,EAAS,UAAOF,IA4CN,sBAUR,6BACE,6BACGE,EAAUmB,KAAI,SAAAC,GAAI,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cCnHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.899cbffb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  let copyGoods = [...goodsFromServer];\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const getReversed = () => {\n    setIsReversed(!isReversed);\n  };\n\n  copyGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    copyGoods.reverse();\n  }\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n    copyGoods = [...goodsFromServer];\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )\n          }\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-warning', { 'is-light': !isReversed })\n          }\n          onClick={getReversed}\n        >\n          Reverse\n        </button>\n\n        {!(sortType === SortType.NONE && !isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            )}\n      </div>\n\n      <ul>\n        <ul>\n          {copyGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}